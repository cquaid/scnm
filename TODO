Daemonize.  Spawn new thread when new attach is requested.
Main thread contains list of message queue ids for each process.
frontend sends commands to the message queue for the requested pid.


Command line accessable (for scripting).
Still needs a shell frontend for searching.


Multithread the frontend so set loops can be implemented properly.


Add filtering for the regions list.

Need commands to stop game and to continue game so shell scripts can:
stop. get address value. process. set. continue. without underlying data changing.


number ops:
= <arg,...>
== <arg,...>
! <arg,...>
! <op> <op_args>
!= <arg,...>
< <arg>
<= <arg>
> <arg>
>= <arg>
>< <arg_gt> <arg_lt>
>=< <arg_ge> <arg_lt>
><= <arg_gt> <arg_le>
>=<= <arg_ge> <arg_le>

arg : single number
arg,... : comma seperated list of numbers (num[,num])

byte array ops:
aob <byte_couples>
string <ascii_string>




Graphical Overlay Hooking

Unfortunately to make this easier for the end user there is a complicated process
to perform:

  PTRACE STOP

  pull some block of data out of the code.
  store current ip and register values.

  write byte code for the following:
    mmap(ANONYMOUS rw)
	break point
	mprotect(map_addr, rx)
	break point

  PTRACE CONTINUE

  On first breakpoint:
    copy the content of a swapBuffers hook function into the map.
	copy the original swapBuffers function into the map and patch
	  the hook function with the new address.

  PTRACE CONTINUE

  On second breakpoint:
    unpatch / restore original code.
	restore original register values.
	restore original ip.
	Add swapBuffers patch to point to the new swapBuffers hook that was
	  with the first breakpoint.

  PTRACE CONTINUE
